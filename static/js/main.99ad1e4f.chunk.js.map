{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","isVisible","handleClick","setState","event","this","props","startTime","start","dateTime","endTime","end","className","summary","location","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","handleInputChange","mockData","JSON","parse","stringify","extractLocations","Set","checkToken","accessToken","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","getItem","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","selectedLocation","eventCount","locationEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"kRAGMA,EAAK,iKASP,OATO,oCACTC,MAAQ,CACNC,WAAW,GACZ,EAEDC,YAAc,WACZ,EAAKC,SAAS,CACZF,WAAY,EAAKD,MAAMC,WAE3B,EAAC,EA0BA,OA1BA,mCAED,WACE,IAAQG,EAAUC,KAAKC,MAAfF,MACFG,EAAYF,KAAKC,MAAMF,MAAMI,MAAMC,SACnCC,EAAUL,KAAKC,MAAMF,MAAMO,IAAIF,SAErC,OACE,sBAAKG,UAAU,QAAO,UACpB,oBAAIA,UAAU,QAAO,SAAER,EAAMS,UAC7B,oBAAID,UAAU,WAAU,SAAER,EAAMU,WAChC,4BAAG,cAAC,IAAM,UAAEP,MACZ,sBAAKK,UAAU,oBAAmB,UAC/BP,KAAKL,MAAMC,WACP,sBAAKW,UAAU,gBAAe,UAC/B,8BAAG,kDAAwB,IAAER,EAAMW,eACnC,8BAAG,uCAAa,IAAC,cAAC,IAAM,UAAER,OAC1B,8BAAG,qCAAW,IAAC,cAAC,IAAM,UAAEG,UAE3BL,KAAKL,MAAMC,UACR,wBAAQW,UAAU,gBAAgBI,QAASX,KAAKH,YAAY,0BAC5D,wBAAQU,UAAU,gBAAgBI,QAASX,KAAKH,YAAY,8BAKxE,KAAC,EAnCQ,CAASe,aAsCLlB,ICtCTmB,EAAS,kHAYZ,OAZY,mCACb,WACE,IAAQC,EAAWd,KAAKC,MAAhBa,OACR,OACE,oBAAIP,UAAU,YAAW,SACtBO,EAAOC,KAAI,SAAAhB,GAAK,OACf,6BACE,cAAC,EAAK,CAACA,MAAOA,KADPA,EAAMiB,GAEV,KAIb,KAAC,EAZY,CAASJ,aAeTC,IChBTI,EAAU,iKA0BZ,OA1BY,oCACdtB,MAAQ,CACNuB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,GAClB,EAEDC,mBAAqB,SAACvB,GACpB,IAAMwB,EAAQxB,EAAMyB,OAAOD,MAErBJ,EADgB,EAAKlB,MAAnBwB,UACsBC,QAAO,SAACjB,GACpC,OAAOA,EAASkB,cAAcC,QAAQL,EAAMI,gBAAkB,CAChE,IACA,EAAK7B,SAAS,CACZoB,MAAOK,EACPJ,eAEJ,EAAE,EAEFU,kBAAoB,SAACC,GACnB,EAAKhC,SAAS,CACZoB,MAAOY,EACPV,iBAAiB,IAGnB,EAAKnB,MAAM8B,aAAaD,EAC1B,EAAC,EA0BA,OA1BA,mCAED,WAAU,IAAD,OACP,OACE,sBAAKvB,UAAU,aAAY,UACzB,uBACEyB,KAAK,OACLzB,UAAU,OACV0B,YAAY,oBACZV,MAAOvB,KAAKL,MAAMuB,MAClBgB,SAAUlC,KAAKsB,mBACfa,QAAS,WAAQ,EAAKrC,SAAS,CAAEsB,iBAAiB,GAAQ,IAE5D,qBAAIb,UAAU,cAAc6B,MAAOpC,KAAKL,MAAMyB,gBAAkB,CAAC,EAAI,CAAEiB,QAAS,QAAS,UACtFrC,KAAKL,MAAMwB,YAAYJ,KAAI,SAACe,GAAU,OACrC,oBAEEnB,QAAS,kBAAM,EAAKkB,kBAAkBC,EAAW,EAAC,SAClDA,GAFKA,EAEW,IAEpB,oBAAcnB,QAAS,kBAAM,EAAKkB,kBAAkB,MAAM,EAAC,SACzD,gDADM,YAMhB,KAAC,EApDa,CAASjB,aAuDVK,ICvDTqB,EAAc,iKAWhB,OAXgB,oCAClB3C,MAAQ,CACN4C,eAAgB,IAChB,EAEFC,kBAAoB,SAACzC,GACnB,IAAMwB,EAAQxB,EAAMyB,OAAOD,MAC3B,EAAKzB,SAAS,CACZyC,eAAgBhB,IAElB,EAAKtB,MAAM8B,kBAAaV,EAAWE,EACrC,EAAC,EAcA,OAdA,mCAED,WACE,OACE,qBAAKhB,UAAU,eAAc,SAC3B,uBACEyB,KAAK,OACLzB,UAAU,iBACVgB,MAAOvB,KAAKL,MAAM4C,eAClBL,SAAUlC,KAAKwC,qBAKvB,KAAC,EAzBiB,CAAS5B,aA4Bd0B,I,sBC9BTG,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,CACzC,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,WAEf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,c,kCCzEJC,EAAmB,SAAC/B,GAC/B,IAAI+B,EAAmB/B,EAAOC,KAAI,SAAChB,GAAK,OAAKA,EAAMU,QAAQ,IAE3D,OADa,YAAO,IAAIqC,IAAID,GAE9B,EAEME,EAAU,iDAAG,WAAOC,GAAW,iGACdC,MAAM,+DAAD,OAAgED,IACvFE,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBC,OAAM,SAACC,GAAK,OAAKA,EAAMF,MAAM,IAAE,KAAD,EAFrB,OAANG,EAAM,yBAILA,GAAM,2CACd,gBANe,sCAQVC,EAAQ,iDAAG,WAAOC,GAAI,qFACiB,OAArCC,EAAaC,mBAAmBF,GAAM,EAAD,OACZR,MAC7B,wEAA0ES,GAEzER,MAAK,SAACC,GACL,OAAOA,EAAIC,MACb,IACCC,OAAM,SAACC,GAAK,OAAKA,CAAK,IAAE,KAAD,EAEyC,OAFzC,UANlBM,EAAY,EAAZA,eAQQC,aAAaC,QAAQ,eAAgBF,GAAc,kBAE5DA,GAAY,2CACpB,gBAba,sCAeRG,EAAc,WAClB,GAAIC,OAAOC,QAAQC,WAAaF,OAAOvD,SAAS0D,SAAU,CACxD,IAAIC,EACFJ,OAAOvD,SAAS4D,SAChB,KACAL,OAAOvD,SAAS6D,KAChBN,OAAOvD,SAAS0D,SAClBH,OAAOC,QAAQC,UAAU,GAAI,GAAIE,EACnC,MACEA,EAASJ,OAAOvD,SAAS4D,SAAW,KAAOL,OAAOvD,SAAS6D,KAC3DN,OAAOC,QAAQC,UAAU,GAAI,GAAIE,EAErC,EAEaG,EAAS,iDAAG,oGACL,GAAlBC,IAAUrE,SAEN6D,OAAOvD,SAASgE,KAAKC,WAAW,oBAAoB,CAAD,eACpC,OAAjBF,IAAUG,OAAO,kBACVlC,GAAQ,uBAGGmC,IAAiB,KAAD,EAAzB,KAALC,EAAK,QAED,CAAD,gBAEyF,OADhGd,IACMe,EAAM,6EAA+ED,EAAM,EAAD,QAC3EE,IAAMC,IAAIF,GAAK,KAAD,GAMlB,OANXvB,EAAM,QACF0B,OACJxD,EAAYoB,EAAiBU,EAAO0B,KAAKnE,QAC7C+C,aAAaC,QAAQ,aAAcpB,KAAKE,UAAUW,EAAO0B,OACzDpB,aAAaC,QAAQ,YAAapB,KAAKE,UAAUnB,KAEnD+C,IAAUG,OAAO,kBACVpB,EAAO0B,KAAKnE,QAAM,4CAG5B,kBAvBqB,mCAyBT8D,EAAc,iDAAG,sGAC6B,IAAnD5B,EAAca,aAAaqB,QAAQ,mBAErBnC,EAAWO,MAAK,iCAC5BO,aAAasB,WAAW,gBAAgB,KAAD,EACmB,OAA1DC,EAAe,IAAIC,gBAAgBrB,OAAOvD,SAAS6E,QAAQ,EAAD,OAC7CF,EAAaJ,IAAI,QAAQ,KAAD,EAAjC,GAAJvB,EAAI,OACA,CAAD,iCACesB,IAAMC,IAAI,+EAA+E,KAAD,GAC/F,OADTO,EAAO,OACLC,EAAYD,EAAQN,KAApBO,QAAO,kBACPxB,OAAOvD,SAASgE,KAAOe,GAAS,KAAF,4BAEjC/B,GAAQD,EAASC,IAAK,iCAExBT,GAAW,4CACnB,kBAf0B,mCC/DrByC,EAAG,iKAmBN,OAnBM,oCACP9F,MAAQ,CACN8B,UAAW,GACXX,OAAQ,GACRyB,eAAgB,GAChBmD,iBAAkB,OACnB,EAED3D,aAAe,WAAyD,IAAxDtB,EAAQ,uDAAG,EAAKd,MAAM+F,iBAAkBC,EAAU,uCAChEpB,IAAYrB,MAAK,SAACpC,GACd,IAAM8E,EAA+B,QAAbnF,EACpBK,EACAA,EAAOY,QAAO,SAAC3B,GAAK,OAAKA,EAAMU,WAAaA,CAAQ,IACxD,EAAKX,SAAS,CACZgB,OAAQ8E,EAAeC,MAAM,EAAGF,GAChCD,iBAAkBjF,EAClB8B,eAAgBoD,GAEtB,GACF,EAAC,EA4BA,OA5BA,8CAED,WAAqB,IAAD,OAClB3F,KAAK8F,SAAU,EACfvB,IAAYrB,MAAK,SAACpC,GACZ,EAAKgF,SACP,EAAKhG,SAAS,CACZgB,OAAQA,EAAO+E,MAAM,EAAE,EAAKlG,MAAM4C,gBAClCd,UAAWoB,EAAiB/B,IAGlC,GACF,GAAC,kCAED,WACEd,KAAK8F,SAAU,CACjB,GAAC,oBAED,WACE,MAA8B9F,KAAKL,MAA3B8B,EAAS,EAATA,UAAWX,EAAM,EAANA,OAEnB,OACE,sBAAKP,UAAU,MAAK,UAClB,cAAC,EAAU,CAACkB,UAAWA,EAAWM,aAAc/B,KAAK+B,eACrD,cAAC,EAAc,CAACA,aAAc/B,KAAK+B,eACnC,cAAC,EAAS,CAACjB,OAAQA,MAGzB,KAAC,EA/CM,CAASF,aAkDH6E,IC/CKM,QACW,cAA7B/B,OAAOvD,SAASuF,UAEe,UAA7BhC,OAAOvD,SAASuF,UAEhBhC,OAAOvD,SAASuF,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,MCFAO,OAAc,oCAAoCC,UAElDC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAACkE,GACLA,EAAaC,YACf,IACChE,OAAM,SAACC,GACNgE,QAAQhE,MAAMA,EAAMiE,QACtB,IE5GNrB,G","file":"static/js/main.99ad1e4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Moment from 'react-moment';\n\nclass Event extends Component {\n  state = {\n    isVisible: false\n  }\n\n  handleClick = () => {\n    this.setState({\n      isVisible: !this.state.isVisible\n    });\n  };\n  \n  render() {\n    const { event } = this.props;\n    const startTime = this.props.event.start.dateTime;\n    const endTime = this.props.event.end.dateTime;\n\n    return (\n      <div className=\"event\">\n        <h1 className=\"title\">{event.summary}</h1>\n        <h3 className=\"location\">{event.location}</h3>\n        <p><Moment>{startTime}</Moment></p>\n        <div className=\"details-container\">\n          {this.state.isVisible \n            && <div className=\"event-details\">\n              <p><b>About this event:</b> {event.description}</p>\n              <p><b>Start:</b> <Moment>{startTime}</Moment></p>\n              <p><b>End:</b> <Moment>{endTime}</Moment></p>\n            </div>}\n          {this.state.isVisible \n            ? <button className=\"toggle-button\" onClick={this.handleClick}>Hide Details</button>\n            : <button className=\"toggle-button\" onClick={this.handleClick}>Get Details</button>\n          } \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => \n          <li key={event.id}>\n            <Event event={event} />\n          </li> \n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const { locations } = this.props;\n    const suggestions = locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({ \n      query: value,\n      suggestions\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n  \n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input \n          type=\"text\"\n          className=\"city\" \n          placeholder=\"Search for a City\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n              key={suggestion} \n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component} from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32\n  };\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numberOfEvents: value\n    });\n    this.props.updateEvents(undefined, value);\n  };\n\n  render() {\n    return (\n      <div className=\"event-number\">\n        <input \n          type=\"text\"\n          className=\"display-number\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChange}\n        />\n\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;","const mockData = JSON.parse(JSON.stringify([\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n]));\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://pgh1e196j3.execute-api.us-west-2.amazonaws.com/dev/api/token/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n  \n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = \n      window.location.protocol + \n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n  \n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://pgh1e196j3.execute-api.us-west-2.amazonaws.com/dev/api/get-events/' + token;\n    const result = await axios.get(url);\n    if(result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n  \n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken || checkToken.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get('https://pgh1e196j3.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url');\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\n// import { mockData } from './mock-data';\n\nclass App extends Component {\n  state = {\n    locations: [],\n    events: [],\n    numberOfEvents: 32,\n    selectedLocation: 'all',\n  }\n\n  updateEvents = (location = this.state.selectedLocation, eventCount) => {\n    getEvents().then((events) => {\n        const locationEvents = (location === 'all')\n          ? events\n          : events.filter((event) => event.location === location);\n        this.setState({\n          events: locationEvents.slice(0, eventCount),\n          selectedLocation: location,\n          numberOfEvents: eventCount\n        });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ \n          events: events.slice(0,this.state.numberOfEvents),\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  \n  render() {\n    const { locations, events } = this.state;\n\n    return (\n      <div className=\"App\">\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <EventList events={events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('763a937fc87748dabd4ccc41452a1b4a').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}